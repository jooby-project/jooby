<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.jooby</groupId>
  <artifactId>jooby-project</artifactId>
  <version>1.4.2-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>jooby-project</name>

  <description>Scalable, fast and modular micro web framework</description>

  <url>https://github.com/jooby-project/jooby</url>

  <modules>
    <module>jooby</module>
    <module>modules</module>
  </modules>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>jknack</id>
      <name>Edgar Espina</name>
      <url>https://github.com/jknack</url>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:jooby-project/jooby.git</connection>
    <developerConnection>scm:git:git@github.com:jooby-project/jooby.git</developerConnection>
    <url>scm:git:git@github.com:jooby-project/jooby.git</url>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <name>Nexus Release Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <!-- Jooby -->
      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby</artifactId>
        <scope>test</scope>
        <version>${jooby.version}</version>
        <classifier>tests</classifier>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-hbv</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-jdbc</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-executor</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-jdbi</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-jdbi3</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-jooq</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-hbs</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-jackson</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-gson</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-maven-plugin</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-undertow</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-jetty</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-netty</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-servlet</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-quartz</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-guava-cache</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-ftl</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-pebble</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-camel</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-jedis</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-mongodb</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-mongodb-rx</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-morphia</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-run</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-elasticsearch</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-ehcache</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-pac4j</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-pac4j2</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-apitool</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-swagger</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-raml</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-spymemcached</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-aws</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-commons-email</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-consul</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-jongo</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-flyway</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-hazelcast</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-ebean</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-akka</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-neo4j</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-frontend</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-clean-css</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-closure-compiler</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-csslint</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-j2v8</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-nodejs</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-jscs</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-jshint</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-less</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-less4j</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-ng-annotate</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-requirejs</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-sass</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-uglify</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-yui-compressor</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-babel</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-rollup</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-svg-sprites</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-svg-symbol</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-assets-autprefixer</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-metrics</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-querydsl</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-sitemap</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-rxjava</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-banner</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-rxjava-jdbc</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-reactor</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-whoops</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-gradle-plugin</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-couchbase</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-cassandra</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-hbm</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-scanner</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-csl</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-unbescape</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-crash</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-thymeleaf</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-filewatcher</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-livereload</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-lang-kotlin</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-requery</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>jooby-rocker</artifactId>
        <version>${jooby.version}</version>
      </dependency>

      <!-- requery -->
      <dependency>
        <groupId>io.requery</groupId>
        <artifactId>requery</artifactId>
        <version>${requery.version}</version>
      </dependency>

      <dependency>
        <groupId>io.requery</groupId>
        <artifactId>requery-kotlin</artifactId>
        <version>${requery.version}</version>
      </dependency>

      <!-- coverity escapers -->
      <dependency>
        <groupId>com.coverity.security</groupId>
        <artifactId>coverity-escapers</artifactId>
        <version>${coverity-escapers.version}</version>
      </dependency>

      <dependency>
        <groupId>org.unbescape</groupId>
        <artifactId>unbescape</artifactId>
        <version>${unbescape.version}</version>
      </dependency>

      <!-- fast-classpath-scanner -->
      <dependency>
        <groupId>io.github.lukehutch</groupId>
        <artifactId>fast-classpath-scanner</artifactId>
        <version>${fast-classpath-scanner.version}</version>
      </dependency>

      <!-- bson4jackon -->
      <dependency>
        <groupId>de.undercouch</groupId>
        <artifactId>bson4jackson</artifactId>
        <version>${bson4jackson.version}</version>
      </dependency>

      <!-- couchbase -->
      <dependency>
        <groupId>com.couchbase.client</groupId>
        <artifactId>java-client</artifactId>
        <version>${couchbase-client.version}</version>
      </dependency>

      <!-- cassandra -->
      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-core</artifactId>
        <version>${cassandra.version}</version>
      </dependency>

      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-mapping</artifactId>
        <version>${cassandra.version}</version>
      </dependency>

      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-extras</artifactId>
        <version>${cassandra.version}</version>
      </dependency>

      <!-- Logging System -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j-api.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback-classic.version}</version>
      </dependency>

      <!-- ASM -->
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm</artifactId>
        <version>${asm.version}</version>
      </dependency>

      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm-util</artifactId>
        <version>${asm.version}</version>
      </dependency>

      <!-- cglib -->
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>${cglib.version}</version>
      </dependency>

      <!-- Config -->
      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>${config.version}</version>
      </dependency>

      <!-- Caffeine -->
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>${caffeine.version}</version>
      </dependency>

      <!-- Guava -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <!-- funzy -->
      <dependency>
        <groupId>org.jooby</groupId>
        <artifactId>funzy</artifactId>
        <version>${funzy.version}</version>
      </dependency>

      <!-- javaslang -->
      <dependency>
        <groupId>io.javaslang</groupId>
        <artifactId>javaslang</artifactId>
        <version>${javaslang.version}</version>
      </dependency>
      <dependency>
        <groupId>io.javaslang</groupId>
        <artifactId>javaslang-match</artifactId>
        <version>${javaslang.version}</version>
      </dependency>

      <!-- Guice -->
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-multibindings</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
      </dependency>

      <!-- Servlet -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet.version}</version>
      </dependency>

      <!-- Undertow -->
      <dependency>
        <groupId>io.undertow</groupId>
        <artifactId>undertow-core</artifactId>
        <version>${undertow.version}</version>
      </dependency>

      <!-- Jetty -->
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty.websocket</groupId>
        <artifactId>websocket-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>

      <!-- Netty -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-buffer</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-handler</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-codec-http</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>${javassist.version}</version>
      </dependency>

      <!-- Jackson 2.x -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jdk8</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-parameter-names</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-guava</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-kotlin</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-afterburner</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- commons-lang3 -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>

      <!-- snake yaml -->
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>

      <!-- Quartz -->
      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
        <exclusions>
          <exclusion>
            <!-- we use hikari, not need for c3p0 -->
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Gson -->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>

      <!-- JDBI -->
      <dependency>
        <groupId>org.jdbi</groupId>
        <artifactId>jdbi</artifactId>
        <version>${jdbi.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jdbi</groupId>
        <artifactId>jdbi3-core</artifactId>
        <version>${jdbi3.version}</version>
      </dependency>

      <!-- Apache Camel -->
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-core</artifactId>
        <version>${camel.version}</version>
      </dependency>

      <!-- rxjava -->
      <dependency>
        <groupId>io.reactivex</groupId>
        <artifactId>rxjava</artifactId>
        <version>${rxjava.version}</version>
      </dependency>

      <!-- Fluent HC -->
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${http-client.version}</version>
      </dependency>

      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>${rest-assured.version}</version>
      </dependency>


      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>fluent-hc</artifactId>
        <version>${http-client.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpmime</artifactId>
        <version>${http-client.version}</version>
      </dependency>

      <!-- Async Http Client -->
      <dependency>
        <groupId>com.ning</groupId>
        <artifactId>async-http-client</artifactId>
        <version>${async-http-client.version}</version>
      </dependency>

      <!-- Handlebars -->
      <dependency>
        <groupId>com.github.jknack</groupId>
        <artifactId>handlebars</artifactId>
        <version>${handlebars.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.jknack</groupId>
        <artifactId>handlebars-guava-cache</artifactId>
        <version>${handlebars.version}</version>
      </dependency>

      <!-- Freemarker -->
      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>

      <!-- Thymeleaf -->
      <dependency>
        <groupId>org.thymeleaf</groupId>
        <artifactId>thymeleaf</artifactId>
        <version>${thymeleaf.version}</version>
      </dependency>

      <!-- Rocker -->
      <dependency>
        <groupId>com.fizzed</groupId>
        <artifactId>rocker-runtime</artifactId>
        <version>${rocker.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fizzed</groupId>
        <artifactId>rocker-compiler</artifactId>
        <version>${rocker.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- jade4j -->
      <dependency>
        <groupId>de.neuland-bfi</groupId>
        <artifactId>jade4j</artifactId>
        <version>${jade4j.version}</version>
      </dependency>

      <!-- pebble -->
      <dependency>
        <groupId>com.mitchellbosecke</groupId>
        <artifactId>pebble</artifactId>
        <version>${pebble.version}</version>
      </dependency>

      <!-- Connection Pool -->
      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${hikariCP.version}</version>
      </dependency>

      <!-- Jedis -->
      <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${jedis.version}</version>
      </dependency>

      <!-- Mongodb -->
      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongodb-driver-core</artifactId>
        <version>${mongo-driver-core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongo-java-driver</artifactId>
        <version>${mongo-java-driver.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongodb-driver-async</artifactId>
        <version>${mongodb-driver-async.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongodb-driver-rx</artifactId>
        <version>${mongo-driver-driver-rx.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mongodb.morphia</groupId>
        <artifactId>morphia</artifactId>
        <version>${morphia.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mongodb.morphia</groupId>
        <artifactId>morphia-logging-slf4j</artifactId>
        <version>${morphia.version}</version>
      </dependency>

      <!-- H2 database -->
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
      </dependency>

      <!-- mySQL -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql-connector-java.version}</version>
      </dependency>

      <!-- pgjdbc-ng -->
      <dependency>
        <groupId>com.impossibl.pgjdbc-ng</groupId>
        <artifactId>pgjdbc-ng</artifactId>
        <version>${pgjdbc-ng.version}</version>
      </dependency>

      <!-- Elasticsearch -->
      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>rest</artifactId>
        <version>${elasticsearch}</version>
      </dependency>

      <!-- Hibernate -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <!-- Hibernate Validator -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate-validator.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.el</groupId>
        <artifactId>javax.el-api</artifactId>
        <version>${javax.el-api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.glassfish.web</groupId>
        <artifactId>javax.el</artifactId>
        <version>${javax.el-ref.version}</version>
      </dependency>

      <!-- jboss-modules -->
      <dependency>
        <groupId>org.jboss.modules</groupId>
        <artifactId>jboss-modules</artifactId>
        <version>${jboss-modules.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoup.version}</version>
      </dependency>

      <!-- swagger -->
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-core</artifactId>
        <version>${swagger.version}</version>
      </dependency>

      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>swagger-ui</artifactId>
        <version>${swagger-ui.version}</version>
      </dependency>

      <dependency>
        <groupId>org.webjars.bower</groupId>
        <artifactId>swagger-ui-themes</artifactId>
        <version>${swagger-ui-themes.version}</version>
      </dependency>

      <dependency>
        <groupId>org.webjars.npm</groupId>
        <artifactId>api-console</artifactId>
        <version>${api-console.version}</version>
      </dependency>

      <!-- Pac4j -->
      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-core</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-oauth</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-cas</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-http</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-openid</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-saml</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-gae</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-oidc</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-jwt</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-ldap</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-sql</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-mongo</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-stormpath</artifactId>
        <version>${pac4j2.version}</version>
      </dependency>

      <!-- AWS -->
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-core</artifactId>
        <version>${aws-java-sdk.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-s3</artifactId>
        <version>${aws-java-sdk.version}</version>
      </dependency>

      <!-- Akka -->
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-actor_2.12</artifactId>
        <version>${akka.version}</version>
      </dependency>

      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-slf4j_2.12</artifactId>
        <version>${akka.version}</version>
      </dependency>

      <!-- Apache Commons Emails -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-email</artifactId>
        <version>${commons-email.version}</version>
      </dependency>

      <!-- jongo -->
      <dependency>
        <groupId>org.jongo</groupId>
        <artifactId>jongo</artifactId>
        <version>${jongo.version}</version>
      </dependency>

      <!-- Flyway -->
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flyway.version}</version>
      </dependency>

      <!-- Hazelcast -->
      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast</artifactId>
        <version>${hazelcast.version}</version>
      </dependency>

      <!-- jruby -->
      <dependency>
        <groupId>org.jruby</groupId>
        <artifactId>jruby-complete</artifactId>
        <version>${jruby.version}</version>
      </dependency>

      <!-- Less -->
      <dependency>
        <groupId>com.github.sommeri</groupId>
        <artifactId>less4j</artifactId>
        <version>${less4j.version}</version>
      </dependency>

      <!-- Ebean -->
      <dependency>
        <groupId>io.ebean</groupId>
        <artifactId>ebean</artifactId>
        <version>${ebean.version}</version>
      </dependency>

      <dependency>
        <groupId>org.avaje</groupId>
        <artifactId>avaje-agentloader</artifactId>
        <version>${avaje-agentloader.version}</version>
      </dependency>

      <dependency>
        <groupId>io.ebean</groupId>
        <artifactId>ebean-agent</artifactId>
        <version>${ebean-agent.version}</version>
      </dependency>

      <!-- jooq -->
      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq</artifactId>
        <version>${jooq.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-meta</artifactId>
        <version>${jooq.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen</artifactId>
        <version>${jooq.version}</version>
      </dependency>

      <!-- YUI Compressor -->
      <dependency>
        <groupId>com.yahoo.platform.yui</groupId>
        <artifactId>yuicompressor</artifactId>
        <version>${yuicompressor.version}</version>
      </dependency>

      <!-- Closure Compiler -->
      <dependency>
        <groupId>com.google.javascript</groupId>
        <artifactId>closure-compiler</artifactId>
        <version>${closure-compiler.version}</version>
      </dependency>

      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${metrics.version}</version>
      </dependency>

      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-healthchecks</artifactId>
        <version>${metrics.version}</version>
      </dependency>

      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-jvm</artifactId>
        <version>${metrics.version}</version>
      </dependency>

      <!-- rxjava-jdbc -->
      <dependency>
        <groupId>io.reactivex</groupId>
        <artifactId>rxjava-string</artifactId>
        <version>${rxjava-string.version}</version>
      </dependency>

      <dependency>
        <groupId>io.reactivex</groupId>
        <artifactId>rxjava-math</artifactId>
        <version>${rxjava-math.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.davidmoten</groupId>
        <artifactId>rxjava-jdbc</artifactId>
        <version>${rxjava-jdbc.version}</version>
      </dependency>

      <dependency>
        <groupId>io.projectreactor</groupId>
        <artifactId>reactor-core</artifactId>
        <version>${reactor.version}</version>
      </dependency>

      <!-- zt-zip -->
      <dependency>
        <groupId>org.zeroturnaround</groupId>
        <artifactId>zt-zip</artifactId>
        <version>${zt-zip.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-transcoder</artifactId>
        <version>${batik.version}</version>
      </dependency>

      <!-- Kotlin -->
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk7</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk8</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-reflect</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <!-- Maven -->
      <dependency>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-plugin-api</artifactId>
        <version>${maven-plugin-api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-project</artifactId>
        <version>${maven-project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-core</artifactId>
        <version>${maven-core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.plugin-tools</groupId>
        <artifactId>maven-plugin-annotations</artifactId>
        <version>${maven-plugin-annotations.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>${plexus-utils.version}</version>
      </dependency>

      <dependency>
        <groupId>org.twdata.maven</groupId>
        <artifactId>mojo-executor</artifactId>
        <version>${mojo-executor.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
      </dependency>

      <!-- sitemap -->
      <dependency>
        <groupId>cz.jiripinkas</groupId>
        <artifactId>jsitemapgenerator</artifactId>
        <version>${jsitemapgenerator.version}</version>
      </dependency>

      <!-- Ehcache -->
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache</artifactId>
        <version>${ehcache.version}</version>
      </dependency>

      <dependency>
        <groupId>net.spy</groupId>
        <artifactId>spymemcached</artifactId>
        <version>${spymemcached.version}</version>
      </dependency>

      <!-- jfiglet -->
      <dependency>
        <groupId>com.github.lalyos</groupId>
        <artifactId>jfiglet</artifactId>
        <version>${jfiglet.version}</version>
      </dependency>

      <!-- groovy -->
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy</artifactId>
        <version>${groovy.version}</version>
      </dependency>

      <!-- crash -->
      <dependency>
        <groupId>org.crashub</groupId>
        <artifactId>crash.shell</artifactId>
        <version>${crash.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.crashub</groupId>
        <artifactId>crash.connectors.telnet</artifactId>
        <version>${crash.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.crashub</groupId>
        <artifactId>crash.connectors.web</artifactId>
        <version>${crash.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.crashub</groupId>
        <artifactId>crash.connectors.ssh</artifactId>
        <version>${crash.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.crashub</groupId>
        <artifactId>crash.plugins.mail</artifactId>
        <version>${crash.version}</version>
      </dependency>

      <dependency>
        <groupId>org.crashub</groupId>
        <artifactId>crash.plugins.cron</artifactId>
        <version>${crash.version}</version>
      </dependency>

      <!-- Consul client -->
      <dependency>
        <groupId>com.orbitz.consul</groupId>
        <artifactId>consul-client</artifactId>
        <version>${consul.version}</version>
      </dependency>

      <!-- neo4j -->
      <dependency>
        <groupId>com.graphaware.neo4j</groupId>
        <artifactId>runtime</artifactId>
        <version>${neo4j.runtime.version}</version>
      </dependency>

      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j-graphdb-api</artifactId>
        <version>${neo4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j</artifactId>
        <version>${neo4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j-slf4j</artifactId>
        <version>${neo4j.version}</version>
      </dependency>

      <dependency>
        <groupId>com.graphaware.neo4j</groupId>
        <artifactId>expire</artifactId>
        <version>${neo4j.expire.version}</version>
      </dependency>

      <dependency>
        <groupId>net.iot-solutions.graphdb</groupId>
        <artifactId>jcypher</artifactId>
        <version>${jcypher.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-kernel</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-io</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-easymock</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>org.jacoco.agent</artifactId>
        <classifier>runtime</classifier>
        <version>${jacoco.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons.compress</artifactId>
        <version>${commons.compress.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-queryparser</artifactId>
        <version>${lucene-queryparser.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-ext</artifactId>
        <version>${slf4j-ext.version}</version>
      </dependency>

      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>${bcprov-jdk15on.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>

    <plugins>

      <!-- Force maven-3.x and java-1.8 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce.versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.0,)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[1.8,)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.source.version}</source>
          <target>${java.source.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- version plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
      </plugin>

      <!-- sure-fire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>

      <!-- Eclipse setup -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>${maven-eclipse-plugin.version}</version>
        <configuration>
          <downloadSources>true</downloadSources>
        </configuration>
      </plugin>

      <!-- Checkstyle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <consoleOutput>true</consoleOutput>
          <configLocation>checkstyle.xml</configLocation>
          <failsOnError>true</failsOnError>
        </configuration>
        <executions>
          <execution>
            <id>checkstyle</id>
            <phase>off</phase>
            <goals>
              <goal>checkstyle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Deploy plugin -->
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${nexus-staging-maven-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!-- jooby:run & jooby:assets -->
        <plugin>
          <groupId>org.jooby</groupId>
          <artifactId>jooby-maven-plugin</artifactId>
          <version>${jooby-maven-plugin.version}</version>
        </plugin>

        <!-- kotlin -->
        <plugin>
          <artifactId>kotlin-maven-plugin</artifactId>
          <groupId>org.jetbrains.kotlin</groupId>
          <version>${kotlin.version}</version>
          <executions>
            <execution>
              <id>compile</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <configuration>
                <args>
                  <arg>-java-parameters</arg>
                </args>
                <jvmTarget>1.8</jvmTarget>
              </configuration>
            </execution>

            <execution>
              <id>test-compile</id>
              <goals>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- avaje-enchancer -->
        <plugin>
          <groupId>io.ebean</groupId>
          <artifactId>ebean-maven-plugin</artifactId>
          <version>${ebean-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>process-classes</phase>
              <configuration>
                <classSource>${project.build.outputDirectory}</classSource>
                <classDestination>${project.build.outputDirectory}</classDestination>
                <packages>${ebean.agent.packages}</packages>
                <transformArgs>${ebean.agent.args}</transformArgs>
              </configuration>
              <goals>
                <goal>enhance</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- shade -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
          <configuration>
            <createDependencyReducedPom>false</createDependencyReducedPom>
            <filters>
              <filter>
                <artifact>*:*</artifact>
                <excludes>
                  <exclude>META-INF/*.SF</exclude>
                  <exclude>META-INF/*.DSA</exclude>
                  <exclude>META-INF/*.RSA</exclude>
                  <exclude>LICENSE</exclude>
                  <exclude>LICENSE.txt</exclude>
                  <exclude>NOTICE</exclude>
                  <exclude>about.html</exclude>
                  <exclude>jetty-dir.css</exclude>
                </excludes>
              </filter>
              <filter>
                <artifact>org.jooby:jooby</artifact>
                <excludes>
                  <exclude>*.sh</exclude>
                </excludes>
              </filter>
            </filters>
          </configuration>
          <executions>
            <execution>
              <id>fat-jar</id>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <transformers>
                  <transformer
                      implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                  <transformer
                      implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <mainClass>${application.class}</mainClass>
                  </transformer>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- ant plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.ant</groupId>
              <artifactId>ant</artifactId>
              <version>1.9.4</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- jooby assemblies -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.jooby</groupId>
              <artifactId>jooby-dist</artifactId>
              <version>${jooby.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${depencency-check-maven.version}</version>
          <configuration>
            <skipProvidedScope>true</skipProvidedScope>
            <skipRuntimeScope>true</skipRuntimeScope>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

  </build>

  <profiles>
    <profile>
      <!-- We enable all these plugins by default. -->
      <id>development</id>
      <activation>
        <file>
          <exists>pom.xml</exists>
        </file>
      </activation>
      <build>
        <plugins>

          <!-- Force maven-3.x and java-1.8 -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${maven-enforcer-plugin.version}</version>
            <executions>
              <execution>
                <id>enforce-versions</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireMavenVersion>
                      <version>[3.0,)</version>
                    </requireMavenVersion>
                    <requireJavaVersion>
                      <version>[1.8,)</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- We're on 1.8 -->
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
              <source>${java.source.version}</source>
              <target>${java.source.version}</target>
              <encoding>${project.build.sourceEncoding}</encoding>
              <compilerArgs>
                <arg>-parameters</arg>
              </compilerArgs>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${maven-resources-plugin.version}</version>
          </plugin>

          <!-- Source code -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
          </plugin>

          <!-- Surefire: unit test -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jdk9</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
              <source>${java.source.version}</source>
              <target>${java.source.version}</target>
              <release>${java.source.version}</release>
              <encoding>${project.build.sourceEncoding}</encoding>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Hack for m2e(Eclipse)/IDEA -->
    <profile>
      <id>IDE</id>
      <dependencies>
        <!-- ASM -->
        <dependency>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm</artifactId>
          <optional>false</optional>
        </dependency>

        <dependency>
          <groupId>org.jooby</groupId>
          <artifactId>jooby-netty</artifactId>
        </dependency>

        <dependency>
          <groupId>org.jooby</groupId>
          <artifactId>jooby-jackson</artifactId>
        </dependency>

        <dependency>
          <groupId>com.fasterxml.jackson.module</groupId>
          <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>stork</id>
      <activation>
        <file>
          <exists>${basedir}${file.separator}src${file.separator}etc${file.separator}stork.yml
          </exists>
        </file>
      </activation>
      <properties>
        <stork-src>${basedir}${file.separator}src${file.separator}etc</stork-src>
        <inputFiles>${basedir}${file.separator}target${file.separator}stork-launchers</inputFiles>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${maven-resources-plugin.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${inputFiles}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${stork-src}</directory>
                      <filtering>true</filtering>
                      <includes>
                        <include>stork.yml</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- stork:generate -->
          <plugin>
            <groupId>com.fizzed</groupId>
            <artifactId>stork-maven-plugin</artifactId>
            <version>${stork-maven-plugin.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>launcher</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.0</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin.version}</version>
            <executions>
              <execution>
                <id>jooby.stork</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.artifactId}-${project.version}.stork</finalName>
                  <descriptorRefs>
                    <descriptorRef>jooby.stork</descriptorRef>
                  </descriptorRefs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>static-assets</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}assets.activator
          </exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <id>jooby.static</id>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.artifactId}-${project.version}.static</finalName>
                  <descriptorRefs>
                    <descriptorRef>jooby.static</descriptorRef>
                  </descriptorRefs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>war</id>
      <activation>
        <file>
          <exists>${basedir}${file.separator}src${file.separator}etc${file.separator}war.activator
          </exists>
        </file>
      </activation>
      <properties>
        <war.maxRequestSize>204800</war.maxRequestSize>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.jooby</groupId>
          <artifactId>jooby-servlet</artifactId>
          <version>${jooby.version}</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <id>jooby.war</id>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${project.artifactId}-${project.version}</finalName>
                  <descriptorRefs>
                    <descriptorRef>jooby.war</descriptorRef>
                  </descriptorRefs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- capsule -->
    <profile>
      <id>capsule</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}capsule.activator
          </exists>
        </file>
      </activation>
      <properties>
        <capsule.resolve>false</capsule.resolve>
        <capsule.chmod>true</capsule.chmod>
        <capsule.trampoline>false</capsule.trampoline>
        <capsule.JVM-Args>-Xms512m -Xmx512m</capsule.JVM-Args>
        <capsule.types>fat</capsule.types>
        <capsule.caplets>Capsule</capsule.caplets>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.chrischristo</groupId>
            <artifactId>capsule-maven-plugin</artifactId>
            <version>${capsule-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <appClass>${application.class}</appClass>
                  <types>${capsule.types}</types>
                  <resolve>${capsule.resolve}</resolve>
                  <chmod>${capsule.chmod}</chmod>
                  <trampoline>${capsule.trampoline}</trampoline>
                  <caplets>${capsule.caplets}</caplets>
                  <manifest>
                    <entry>
                      <key>JVM-Args</key>
                      <value>${capsule.JVM-Args}</value>
                    </entry>
                    <entry>
                      <key>Min-Java-Version</key>
                      <value>1.8.0</value>
                    </entry>
                  </manifest>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <!-- coveralls -->
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>${coveralls-maven-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Public directory -->
    <profile>
      <id>public-directory</id>
      <activation>
        <file>
          <exists>public</exists>
        </file>
      </activation>
      <properties>
        <project.public.directory>public</project.public.directory>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <directory>${project.public.directory}</directory>
          </resource>
        </resources>
      </build>
    </profile>

    <!-- Config directory -->
    <profile>
      <id>config-directory</id>
      <activation>
        <file>
          <exists>config</exists>
        </file>
      </activation>
      <properties>
        <project.config.directory>config</project.config.directory>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <directory>${project.config.directory}</directory>
          </resource>
        </resources>
      </build>
    </profile>

    <profile>
      <id>conf-directory</id>
      <activation>
        <file>
          <exists>conf</exists>
        </file>
      </activation>
      <properties>
        <project.conf.directory>conf</project.conf.directory>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <directory>${project.conf.directory}</directory>
          </resource>
        </resources>
      </build>
    </profile>

    <!-- docker -->
    <profile>
      <id>docker.jar</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}docker.activator
          </exists>
        </file>
      </activation>
      <properties>
        <docker.expose>8080</docker.expose>
        <docker.targetPath>/</docker.targetPath>
        <docker.directory>${project.build.directory}</docker.directory>
        <docker.include>${project.build.finalName}.jar</docker.include>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <configuration>
              <imageName>${project.artifactId}</imageName>
              <baseImage>openjdk:jre-alpine</baseImage>
              <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
              <exposes>
                <expose>${docker.expose}</expose>
              </exposes>
              <resources>
                <resource>
                  <targetPath>${docker.targetPath}</targetPath>
                  <directory>${docker.directory}</directory>
                  <include>${docker.include}</include>
                </resource>
              </resources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docker.stork</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}docker.stork.activator
          </exists>
        </file>
      </activation>
      <properties>
        <docker.expose>8080</docker.expose>
        <docker.targetPath>./</docker.targetPath>
        <docker.workdir>/opt/${project.artifactId}</docker.workdir>
        <docker.directory>${project.build.directory}</docker.directory>
        <docker.include>${project.build.finalName}.stork.zip</docker.include>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <configuration>
              <imageName>${project.artifactId}</imageName>
              <baseImage>openjdk:jre-alpine</baseImage>
              <entryPoint>["bin/${project.artifactId}", "--run"]</entryPoint>
              <workdir>${docker.workdir}</workdir>
              <exposes>
                <expose>${docker.expose}</expose>
              </exposes>
              <runs>
                <run>unzip ${project.build.finalName}.stork.zip</run>
              </runs>
              <resources>
                <resource>
                  <targetPath>${docker.targetPath}</targetPath>
                  <directory>${docker.directory}</directory>
                  <include>${docker.include}</include>
                </resource>
              </resources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- checkstyle -->
    <profile>
      <id>checkstyle</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}checkstyle.xml
          </exists>
        </file>
      </activation>
      <properties>
        <checkstyle-file>
          ${basedir}${file.separator}src${file.separator}etc${file.separator}checkstyle.xml
        </checkstyle-file>
        <checkstyle.phase>package</checkstyle.phase>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven-checkstyle-plugin.version}</version>
            <configuration>
              <consoleOutput>true</consoleOutput>
              <configLocation>${checkstyle-file}</configLocation>
              <failsOnError>true</failsOnError>
            </configuration>
            <executions>
              <execution>
                <id>checkstyle</id>
                <phase>${checkstyle.phase}</phase>
                <goals>
                  <goal>checkstyle</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>ebean-activator</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}ebean.activator
          </exists>
        </file>
      </activation>
      <dependencies>
        <!-- ebean-runtime-enhancer -->
        <dependency>
          <groupId>io.ebean</groupId>
          <artifactId>ebean-agent</artifactId>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.avaje</groupId>
          <artifactId>avaje-agentloader</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <!-- ebean-enhancer -->
          <plugin>
            <groupId>io.ebean</groupId>
            <artifactId>ebean-maven-plugin</artifactId>
            <version>${ebean-maven-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- QueryDSL for JPA -->
    <profile>
      <id>querydsl-jpa</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}querydsl-jpa.activator
          </exists>
        </file>
      </activation>
      <properties>
        <querydsl-jpa-apt-file>querydsl-jpa-${querydsl.version}-apt-one-jar.jar
        </querydsl-jpa-apt-file>
        <querydsl-jpa-apt-dir>
          ${settings.localRepository}/com/querydsl/querydsl-jpa/${querydsl.version}
        </querydsl-jpa-apt-dir>
        <querydsl-jpa-apt-path>${querydsl-jpa-apt-dir}/${querydsl-jpa-apt-file}
        </querydsl-jpa-apt-path>
        <querydsl-jpa-output-dir>target/generated-sources</querydsl-jpa-output-dir>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${build-helper-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>add-querydsl-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${querydsl-jpa-output-dir}</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <!-- download apt-one-jar and provides a better Eclipse integration -->
              <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <classifier>apt-one-jar</classifier>
                <version>${querydsl.version}</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <configuration>
              <additionalConfig>
                <file>
                  <name>.factorypath</name>
                  <content><![CDATA[<factorypath>
  <factorypathentry kind="EXTJAR" id="${querydsl-jpa-apt-path}" enabled="true" runInBatchMode="false" />
</factorypath>
  ]]>
                  </content>
                </file>
                <file>
                  <name>.settings/org.eclipse.jdt.apt.core.prefs</name>
                  <content><![CDATA[
  eclipse.preferences.version=1
org.eclipse.jdt.apt.aptEnabled=true
org.eclipse.jdt.apt.genSrcDir=${querydsl-jpa-output-dir}
org.eclipse.jdt.apt.reconcileEnabled=true
org.eclipse.jdt.apt.processorOptions/defaultOverwrite=true
   ]]>
                  </content>
                </file>
              </additionalConfig>
            </configuration>
          </plugin>

          <!-- Query DSL -->
          <plugin>
            <groupId>com.mysema.maven</groupId>
            <artifactId>apt-maven-plugin</artifactId>
            <version>${apt-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>process</goal>
                </goals>
                <configuration>
                  <outputDirectory>${querydsl-jpa-output-dir}</outputDirectory>
                  <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                  <logOnlyOnError>true</logOnlyOnError>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${querydsl.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- Query DSL -->
        <dependency>
          <groupId>com.querydsl</groupId>
          <artifactId>querydsl-jpa</artifactId>
          <version>${querydsl.version}</version>
          <exclusions>
            <exclusion>
              <groupId>cglib</groupId>
              <artifactId>cglib</artifactId>
            </exclusion>
            <exclusion>
              <groupId>net.sourceforge.findbugs</groupId>
              <artifactId>jsr305</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>

    <!-- Requery -->
    <profile>
      <id>requery</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}requery.activator
          </exists>
        </file>
      </activation>
      <properties>
        <requery-apt-file>requery-processor-${requery.version}.jar</requery-apt-file>
        <requery-apt-dir>
          ${settings.localRepository}/io/requery/requery/${requery.version}
        </requery-apt-dir>
        <requery-apt-path>${requery-apt-dir}/${requery-apt-file}
        </requery-apt-path>
        <requery.output>target/generated-sources</requery.output>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${build-helper-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>add-querydsl-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${requery.output}</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Requery -->
          <plugin>
            <groupId>com.mysema.maven</groupId>
            <artifactId>apt-maven-plugin</artifactId>
            <version>${apt-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>process</goal>
                </goals>
                <configuration>
                  <outputDirectory>${requery.output}</outputDirectory>
                  <processor>io.requery.processor.EntityProcessor</processor>
                  <logOnlyOnError>true</logOnlyOnError>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>io.requery</groupId>
                <artifactId>requery-processor</artifactId>
                <version>${requery.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- rocker -->
    <profile>
      <id>rocker</id>
      <activation>
        <file>
          <exists>
            ${basedir}${file.separator}src${file.separator}etc${file.separator}rocker.activator
          </exists>
        </file>
      </activation>
      <properties>
        <rocker.outputDirectory>target/generated-sources</rocker.outputDirectory>
        <rocker.templateDirectory>public</rocker.templateDirectory>
        <rocker.extendsClass>org.jooby.rocker.RequestRockerTemplate</rocker.extendsClass>
        <rocker.optimize>true</rocker.optimize>
        <rocker.touchFile>nofile</rocker.touchFile>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${build-helper-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>add-querydsl-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${rocker.outputDirectory}</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Rocker -->
          <plugin>
            <groupId>com.fizzed</groupId>
            <artifactId>rocker-maven-plugin</artifactId>
            <version>${rocker.version}</version>
            <configuration>
              <addAsSources>false</addAsSources>
              <javaVersion>1.8</javaVersion>
              <optimize>${rocker.optimize}</optimize>
              <templateDirectory>${rocker.templateDirectory}</templateDirectory>
              <outputDirectory>${rocker.outputDirectory}</outputDirectory>
              <touchFile>${rocker.touchFile}</touchFile>
              <extendsClass>${rocker.extendsClass}</extendsClass>
            </configuration>
            <executions>
              <execution>
                <id>generate-rocker-templates</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- license header -->
    <profile>
      <id>license</id>
      <activation>
        <file>
          <exists>${basedir}${file.separator}LICENSE</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>${license-maven-plugin.version}</version>
            <configuration>
              <header>LICENSE</header>
              <strictCheck>true</strictCheck>
              <aggregate>true</aggregate>
              <skipExistingHeaders>false</skipExistingHeaders>
              <includes>
                <include>src/main/java/**/*.java</include>
                <include>src/main/kotlin/**/*.kt</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>license-multiproject</id>
      <activation>
        <file>
          <exists>${basedir}${file.separator}..${file.separator}LICENSE</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>${license-maven-plugin.version}</version>
            <configuration>
              <header>LICENSE</header>
              <strictCheck>true</strictCheck>
              <skipExistingHeaders>true</skipExistingHeaders>
              <includes>
                <include>src/main/java/**/*.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Sonatype OSS release -->
    <profile>
      <id>sonatype-oss-release</id>
      <build>
        <plugins>
          <!-- Source -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Javadoc -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <configuration>
              <excludePackageNames>${javadoc.excludes}</excludePackageNames>
              <aggregate>true</aggregate>
              <show>public</show>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- GPG -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <keyname>${gpg.keyname}</keyname>
                  <passphraseServerId>${gpg.keyname}</passphraseServerId>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Release plugin -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${nexus-staging-maven-plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- gh-pages -->
    <profile>
      <id>gh-pages</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>${maven-site-plugin.version}</version>
            <configuration>
              <generateProjectInfo>false</generateProjectInfo>
              <generateReports>false</generateReports>
              <generateSitemap>false</generateSitemap>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>javadoc</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <excludePackageNames>${javadoc.excludes}</excludePackageNames>
              <aggregate>true</aggregate>
              <show>public</show>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <properties>
    <!-- Dependencies -->
    <akka.version>2.5.13</akka.version>
    <antlr4-runtime.version>4.7</antlr4-runtime.version>
    <api-console.version>3.0.17</api-console.version>
    <asm.version>6.2</asm.version>
    <async-http-client.version>1.9.40</async-http-client.version>
    <avaje-agentloader.version>2.1.2</avaje-agentloader.version>
    <aws-java-sdk.version>1.11.356</aws-java-sdk.version>
    <bootstrap.version>3.3.4</bootstrap.version>
    <boringssl.version>2.0.8.Final</boringssl.version>
    <bson4jackson.version>2.9.2</bson4jackson.version>
    <caffeine.version>2.6.2</caffeine.version>
    <camel.version>2.18.3</camel.version>
    <cglib.version>3.2.6</cglib.version>
    <closure-compiler.version>v20180610</closure-compiler.version>
    <commons-compress.version>1.17</commons-compress.version>
    <commons-email.version>1.5</commons-email.version>
    <lucene-queryparser.version>5.5.5</lucene-queryparser.version>
    <bcprov-jdk15on.version>1.59</bcprov-jdk15on.version>
    <commons-lang.version>2.6</commons-lang.version>
    <commons-lang3.version>3.7</commons-lang3.version>
    <config.version>1.3.3</config.version>
    <consul.version>1.2.1</consul.version>
    <crash.version>1.3.2</crash.version>
    <dse-driver.version>1.1.2</dse-driver.version>
    <ebean-agent.version>11.11.1</ebean-agent.version>
    <ebean-maven-plugin.version>11.11.2</ebean-maven-plugin.version>
    <ebean.version>11.18.2</ebean.version>
    <ehcache.version>2.10.5</ehcache.version>
    <elasticsearch>5.5.3</elasticsearch>
    <flyway.version>5.1.3</flyway.version>
    <freemarker.version>2.3.28</freemarker.version>
    <frontend-plugin-core.version>1.6</frontend-plugin-core.version>
    <funzy.version>0.1.0</funzy.version>
    <groovy.version>2.4.7</groovy.version>
    <gson.version>2.8.5</gson.version>
    <guava.version>21.0</guava.version> <!-- TODO: upgrade to =< 24.1.1 -->
    <guice.version>4.2.0</guice.version>
    <h2.version>1.4.197</h2.version>
    <handlebars.version>4.1.0</handlebars.version>
    <hazelcast.version>3.10.2</hazelcast.version>
    <hibernate-validator.version>5.1.3.Final</hibernate-validator.version>
    <hibernate.version>5.2.1.Final</hibernate.version>
    <hikariCP.version>3.2.0</hikariCP.version>
    <http-client.version>4.5.5</http-client.version>
    <j2v8.version>4.6.0</j2v8.version>
    <jackson.version>2.9.6</jackson.version>
    <jade4j.version>1.2.7</jade4j.version>
    <javassist.version>3.22.0-GA</javassist.version>
    <javax.el-api.version>2.2.5</javax.el-api.version> <!-- TODO: upgrade to 3.0.0 -->
    <javax.el-ref.version>2.2.6</javax.el-ref.version> <!-- TODO: upgrade to 3.0.0 -->
    <javax.inject.version>1</javax.inject.version>
    <javax.ws.rs-api.version>2.0</javax.ws.rs-api.version>
    <jboss-modules.version>1.8.5.Final</jboss-modules.version>
    <jcypher.version>3.9.0</jcypher.version>
    <jdbi.version>2.78</jdbi.version>
    <jdbi3.version>3.3.0</jdbi3.version>
    <jedis.version>2.9.0</jedis.version>
    <jersey-client.version>1.19.1</jersey-client.version>
    <jetty.version>9.4.10.v20180503</jetty.version>
    <jongo.version>1.4.0</jongo.version>
    <jquery-ui.version>1.12.1</jquery-ui.version>
    <jquery.version>2.2.4</jquery.version> <!-- TODO: update to 3.1.1 -->
    <jruby.version>9.2.0.0</jruby.version>
    <jsass.version>5.2.0</jsass.version>
    <jsoup.version>1.11.3</jsoup.version>
    <jsr305.version>3.0.2</jsr305.version>
    <kotlin.version>1.2.50</kotlin.version>
    <less4j.version>1.17.2</less4j.version>
    <log4jdbc.version>1.2</log4jdbc.version>
    <logback-classic.version>1.2.3</logback-classic.version>
    <metrics.version>4.0.2</metrics.version>
    <mongo-driver-core.version>3.8.0</mongo-driver-core.version> <!-- TODO: upgrade to 3.8.0 -->
    <mongo-java-driver.version>3.8.0</mongo-java-driver.version> <!-- TODO: upgrade to 3.8.0 -->
    <mongodb-driver-async.version>${mongo-java-driver.version}</mongodb-driver-async.version>
    <morphia.version>1.3.2</morphia.version>
    <mysql-connector-java.version>5.1.42</mysql-connector-java.version> <!-- TODO: upgrade to 8.0.11 -->
    <neo4j.expire.version>3.4.0.52.4</neo4j.expire.version>
    <neo4j.runtime.version>3.4.0.52</neo4j.runtime.version>
    <neo4j.version>3.3.2</neo4j.version>
    <netty.version>4.1.25.Final</netty.version>
    <pac4j.version>1.9.9</pac4j.version>
    <pac4j2.version>2.2.1</pac4j2.version>
    <pebble.version>2.4.0</pebble.version>
    <pgjdbc-ng.version>0.7.1</pgjdbc-ng.version>
    <progressbar.version>0.6.0</progressbar.version>
    <quartz.version>2.3.0</quartz.version>
    <reactor.version>2.5.0.M3</reactor.version>
    <requery.version>1.5.1</requery.version>
    <rest-assured.version>3.1.0</rest-assured.version>
    <rocker.version>0.24.0</rocker.version>
    <rxjava-jdbc.version>0.7.16</rxjava-jdbc.version>
    <rxjava-math.version>1.0.0</rxjava-math.version>
    <rxjava-string.version>1.1.1</rxjava-string.version>
    <rxjava.version>1.1.5</rxjava.version> <!-- TODO: update to 1.3.8 -->
    <rxjava2.version>2.0.7</rxjava2.version>
    <servlet.version>3.1.0</servlet.version>
    <slf4j-api.version>1.7.25</slf4j-api.version>
    <slf4j-ext.version>1.7.25</slf4j-ext.version>
    <snakeyaml.version>1.19</snakeyaml.version>
    <spymemcached.version>2.12.3</spymemcached.version>
    <swagger-parser.version>1.0.36</swagger-parser.version>
    <swagger-ui-themes.version>3.0.0</swagger-ui-themes.version>
    <swagger-ui.version>3.17.1</swagger-ui.version>
    <swagger.version>1.5.20</swagger.version>
    <thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>
    <undertow.version>1.4.25.Final</undertow.version>
    <xmlgraphics-commons.version>2.1</xmlgraphics-commons.version>
    <yuicompressor.version>2.4.8</yuicompressor.version>

    <!-- config -->
    <ebean.agent.packages>**</ebean.agent.packages>
    <ebean.agent.args>debug=0</ebean.agent.args>

    <!-- jooq -->
    <jooq.version>3.11.2</jooq.version>

    <!-- QueryDSL -->
    <querydsl.version>4.1.4</querydsl.version>

    <!-- javaslang -->
    <javaslang.version>2.0.4</javaslang.version>

    <batik.version>1.10</batik.version>
    <cassandra.version>3.5.0</cassandra.version>
    <couchbase-client.version>2.5.9</couchbase-client.version>
    <coverity-escapers.version>1.1.1</coverity-escapers.version>
    <fast-classpath-scanner.version>3.1.6</fast-classpath-scanner.version>
    <jfiglet.version>0.0.8</jfiglet.version>
    <jsitemapgenerator.version>2.2</jsitemapgenerator.version>
    <mongo-driver-driver-rx.version>1.2.0</mongo-driver-driver-rx.version>
    <unbescape.version>1.1.6.RELEASE</unbescape.version>
    <zt-zip.version>1.13</zt-zip.version>

    <!-- Test dependencies -->
    <easymock.version>3.6</easymock.version>
    <jacoco.version>0.8.1</jacoco.version>
    <junit.version>4.12</junit.version>
    <powermock.version>1.7.4</powermock.version>

    <!-- Maven properties -->
    <java.source.version>8</java.source.version>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ssa</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <timestamp>${maven.build.timestamp}</timestamp>

    <!-- Maven plugins -->
    <apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
    <archetype-packaging.version>2.2</archetype-packaging.version>
    <build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
    <capsule-maven-plugin.version>1.0.4</capsule-maven-plugin.version>
    <cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
    <coveralls-maven-plugin.version>3.1.0</coveralls-maven-plugin.version>
    <depencency-check-maven.version>2.1.1</depencency-check-maven.version>
    <docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
    <dokka-maven-plugin.version>0.9.13</dokka-maven-plugin.version>
    <duplicate-finder-maven-plugin.version>1.2.1</duplicate-finder-maven-plugin.version>
    <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
    <jacoco-maven-plugin.version>${jacoco.version}</jacoco-maven-plugin.version>
    <license-maven-plugin.version>3.0</license-maven-plugin.version>
    <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
    <maven-archetype-plugin.version>2.2</maven-archetype-plugin.version>
    <maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
    <maven-checkstyle-plugin.version>2.15</maven-checkstyle-plugin.version>
    <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
    <maven-core.version>3.5.4</maven-core.version>
    <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    <maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
    <maven-enforcer-plugin.version>3.0.0-M1</maven-enforcer-plugin.version>
    <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
    <maven-jar-plugin.version>2.5</maven-jar-plugin.version>
    <maven-java-formatter-plugin.version>0.4</maven-java-formatter-plugin.version>
    <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
    <maven-plugin-annotations.version>3.5.2</maven-plugin-annotations.version>
    <maven-plugin-api.version>3.5.4</maven-plugin-api.version>
    <maven-plugin-plugin.version>3.5</maven-plugin-plugin.version>
    <maven-project.version>2.2.1</maven-project.version>
    <maven-release-plugin.version>2.5.1</maven-release-plugin.version>
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <maven-shade-plugin.version>3.1.1</maven-shade-plugin.version>
    <maven-site-plugin.version>3.4</maven-site-plugin.version>
    <maven-source-plugin.version>2.4</maven-source-plugin.version>
    <maven-surefire-plugin.version>2.21.0</maven-surefire-plugin.version>
    <mojo-executor.version>2.3.0</mojo-executor.version>
    <nexus-staging-maven-plugin.version>1.6.5</nexus-staging-maven-plugin.version>
    <plexus-utils.version>3.1.0</plexus-utils.version>
    <stork-maven-plugin.version>2.7.0</stork-maven-plugin.version>
    <versions-maven-plugin.version>2.1</versions-maven-plugin.version>

    <!-- Gradle plugins -->
    <gradle-core.version>2.6</gradle-core.version>
    <gradle-plugins.version>0.9-rc-1</gradle-plugins.version>
    <gradle-tooling-api.version>2.6</gradle-tooling-api.version>

    <jooby.version>${project.version}</jooby.version>
    <jooby-maven-plugin.version>${jooby.version}</jooby-maven-plugin.version>
    <javadoc.excludes>org.jooby.internal:com.impossibl.postgres.jdbc:org.skife.jdbi.v2</javadoc.excludes>
  </properties>
</project>
