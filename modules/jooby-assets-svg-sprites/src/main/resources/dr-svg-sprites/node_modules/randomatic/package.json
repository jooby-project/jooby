{
  "_args": [
    [
      {
        "raw": "randomatic@https://registry.npmjs.org/randomatic/-/randomatic-1.1.5.tgz",
        "scope": null,
        "escapedName": "randomatic",
        "name": "randomatic",
        "rawSpec": "https://registry.npmjs.org/randomatic/-/randomatic-1.1.5.tgz",
        "spec": "https://registry.npmjs.org/randomatic/-/randomatic-1.1.5.tgz",
        "type": "remote"
      },
      "/Users/edgar/node_modules/dr-svg-sprites"
    ]
  ],
  "_from": "randomatic@>=1.1.3 <2.0.0",
  "_id": "randomatic@1.1.5",
  "_inCache": true,
  "_location": "/dr-svg-sprites/randomatic",
  "_phantomChildren": {},
  "_requested": {
    "raw": "randomatic@https://registry.npmjs.org/randomatic/-/randomatic-1.1.5.tgz",
    "scope": null,
    "escapedName": "randomatic",
    "name": "randomatic",
    "rawSpec": "https://registry.npmjs.org/randomatic/-/randomatic-1.1.5.tgz",
    "spec": "https://registry.npmjs.org/randomatic/-/randomatic-1.1.5.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/dr-svg-sprites",
    "/dr-svg-sprites/fill-range"
  ],
  "_resolved": "https://registry.npmjs.org/randomatic/-/randomatic-1.1.5.tgz",
  "_shasum": "5e9ef5f2d573c67bd2b8124ae90b5156e457840b",
  "_shrinkwrap": null,
  "_spec": "randomatic@https://registry.npmjs.org/randomatic/-/randomatic-1.1.5.tgz",
  "_where": "/Users/edgar/node_modules/dr-svg-sprites",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/randomatic/issues"
  },
  "dependencies": {
    "is-number": "^2.0.2",
    "kind-of": "^3.0.2"
  },
  "description": "Generate randomized strings of a specified length, fast. Only the length is necessary, but you can optionally generate patterns using any combination of numeric, alpha-numeric, alphabetical, special or custom characters.",
  "devDependencies": {
    "ansi-bold": "^0.1.1",
    "benchmarked": "^0.1.4",
    "glob": "^5.0.15",
    "mocha": "*",
    "should": "*"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/jonschlinkert/randomatic",
  "keywords": [
    "alpha",
    "alpha-numeric",
    "alphanumeric",
    "characters",
    "chars",
    "numeric",
    "rand",
    "random",
    "randomize",
    "randomized"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "randomatic",
  "optionalDependencies": {},
  "readme": "# randomatic [![NPM version](https://img.shields.io/npm/v/randomatic.svg)](https://www.npmjs.com/package/randomatic)\n\n> Generate randomized strings of a specified length, fast. Only the length is necessary, but you can optionally generate patterns using any combination of numeric, alpha-numeric, alphabetical, special or custom characters.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i randomatic --save\n```\n\nInstall with [bower](http://bower.io/)\n\n```sh\n$ bower install randomatic --save\n```\n\n## Usage\n\n```js\nvar randomize = require('randomatic');\n```\n\n## API\n\n```js\nrandomize(pattern, length, options);\n```\n\n* `pattern` **{String}**: The pattern to use for randomizing\n* `length` **{Object}**: The length of the string to generate\n\n### pattern\n\n> The pattern to use for randomizing\n\nPatterns can contain any combination of the below characters, specified in any order.\n\n**Example:**\n\nTo generate a 10-character randomized string using all available characters:\n\n```js\nrandomize('*', 10);\n//=>\n\nrandomize('Aa0!', 10);\n//=>\n```\n\n* `a`: Lowercase alpha characters (`abcdefghijklmnopqrstuvwxyz'`)\n* `A`: Uppercase alpha characters (`ABCDEFGHIJKLMNOPQRSTUVWXYZ'`)\n* `0`: Numeric characters (`0123456789'`)\n* `!`: Special characters (`~!@#$%^&()_+-={}[];\\',.`)\n* `*`: All characters (all of the above combined)\n* `?`: Custom characters (pass a string of custom characters to the options)\n\n### length\n\n> the length of the string to generate\n\n**Examples:**\n\n* `randomize('A', 5)` will generate a 5-character, uppercase, alphabetical, randomized string, e.g. `KDJWJ`.\n* `randomize('0', 2)` will generate a 2-digit random number\n* `randomize('0', 3)` will generate a 3-digit random number\n* `randomize('0', 12)` will generate a 12-digit random number\n* `randomize('A0', 16)` will generate a 16-character, alpha-numeric randomized string\n\nIf `length` is left undefined, the length of the pattern in the first parameter will be used. For example:\n\n+ `randomize('00')` will generate a 2-digit random number\n* `randomize('000')` will generate a 3-digit random number\n* `randomize('0000')` will generate a 4-digit random number...\n* `randomize('AAAAA')` will generate a 5-character, uppercase alphabetical random string...\n\nThese are just examples, [see the tests](./test.js) for more use cases and examples.\n\n## options\n\n#### chars\n\nType: `String`\n\nDefault: `undefined`\n\nDefine a custom string to be randomized.\n\n**Example:**\n\n* `randomize('?', 20, {chars: 'jonschlinkert'})` will generate a 20-character randomized string from the letters contained in `jonschlinkert`.\n* `randomize('?', {chars: 'jonschlinkert'})` will generate a 13-character randomized string from the letters contained in `jonschlinkert`.\n\n## Usage Examples\n\n* `randomize('A', 4)` (_whitespace insenstive_) would result in randomized 4-digit uppercase letters, like, `ZAKH`, `UJSL`... etc.\n* `randomize('AAAA')` is equivelant to `randomize('A', 4)`\n* `randomize('AAA0')` and `randomize('AA00')` and `randomize('A0A0')` are equivelant to `randomize('A0', 4)`\n* `randomize('aa')`: results in double-digit, randomized, lower-case letters (`abcdefghijklmnopqrstuvwxyz`)\n* `randomize('AAA')`: results in triple-digit, randomized, upper-case letters (`ABCDEFGHIJKLMNOPQRSTUVWXYZ`)\n* `randomize('0', 6)`: results in six-digit, randomized nubmers (`0123456789`)\n* `randomize('!', 5)`: results in single-digit randomized, _valid_ non-letter characters (`~!@#$%^&()_+-={}[];\\',.`)\n* `randomize('A!a0', 9)`: results in nine-digit, randomized characters (any of the above)\n\n_The order in which the characters are defined is insignificant._\n\n## Related\n\n* [pad-left](https://www.npmjs.com/package/pad-left): Left pad a string with zeros or a specified string. Fastest implementation. | [homepage](https://github.com/jonschlinkert/pad-left)\n* [pad-right](https://www.npmjs.com/package/pad-right): Right pad a string with zeros or a specified string. Fastest implementation. | [homepage](https://github.com/jonschlinkert/pad-right)\n* [repeat-string](https://www.npmjs.com/package/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string. | [homepage](https://github.com/jonschlinkert/repeat-string)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/randomatic/issues/new).\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright Â© 2015 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb) on December 10, 2015._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/randomatic.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "related": {
      "list": [
        "repeat-string",
        "pad-left",
        "pad-right"
      ]
    },
    "plugins": [
      "gulp-format-md"
    ]
  },
  "version": "1.1.5"
}
