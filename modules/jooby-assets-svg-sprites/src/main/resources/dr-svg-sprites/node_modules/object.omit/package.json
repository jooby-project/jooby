{
  "_args": [
    [
      {
        "raw": "object.omit@https://registry.npmjs.org/object.omit/-/object.omit-2.0.0.tgz",
        "scope": null,
        "escapedName": "object.omit",
        "name": "object.omit",
        "rawSpec": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.0.tgz",
        "spec": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.0.tgz",
        "type": "remote"
      },
      "/Users/edgar/node_modules/dr-svg-sprites"
    ]
  ],
  "_from": "object.omit@>=2.0.0 <3.0.0",
  "_id": "object.omit@2.0.0",
  "_inCache": true,
  "_location": "/dr-svg-sprites/object.omit",
  "_phantomChildren": {},
  "_requested": {
    "raw": "object.omit@https://registry.npmjs.org/object.omit/-/object.omit-2.0.0.tgz",
    "scope": null,
    "escapedName": "object.omit",
    "name": "object.omit",
    "rawSpec": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.0.tgz",
    "spec": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/dr-svg-sprites",
    "/dr-svg-sprites/micromatch"
  ],
  "_resolved": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.0.tgz",
  "_shasum": "868597333d54e60662940bb458605dd6ae12fe94",
  "_shrinkwrap": null,
  "_spec": "object.omit@https://registry.npmjs.org/object.omit/-/object.omit-2.0.0.tgz",
  "_where": "/Users/edgar/node_modules/dr-svg-sprites",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/object.omit/issues"
  },
  "dependencies": {
    "for-own": "^0.1.3",
    "is-extendable": "^0.1.1"
  },
  "description": "Return a copy of an object excluding the given key, or array of keys. Also accepts an optional filter function as the last argument.",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/jonschlinkert/object.omit",
  "keywords": [
    "clear",
    "delete",
    "key",
    "value",
    "object",
    "omit",
    "property",
    "remove"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "object.omit",
  "optionalDependencies": {},
  "readme": "# object.omit [![NPM version](https://badge.fury.io/js/object.omit.svg)](http://badge.fury.io/js/object.omit)\n\n> Return a copy of an object excluding the given key, or array of keys. Also accepts an optional filter function as the last argument.\n\n## Install\n\n```sh\n$ npm i object.omit --save-dev\n```\n\n## Usage\n\n```js\nvar omit = require('object.omit');\n```\n\nPass a string `key` to omit:\n\n```js\nomit({a: 'a', b: 'b', c: 'c'}, 'a')\n//=> { b: 'b', c: 'c' }\n```\n\nPass an array of `keys` to omit:\n\n```js\nomit({a: 'a', b: 'b', c: 'c'}, ['a', 'c'])\n//=> { b: 'b' }\n```\n\nReturns the object if no keys are passed:\n\n```js\nomit({a: 'a', b: 'b', c: 'c'})\n//=> {a: 'a', b: 'b', c: 'c'}\n```\n\nReturns an empty object if no value is passed.\n\n```js\nomit()\n//=> {}\n```\n\n### Filter function\n\nAn optional filter function may be passed as the last argument, with or without keys passed on the arguments:\n\n**filter on keys**\n\n```js\nvar res = omit({a: 'a', b: 'b', c: 'c'}, function (val, key) {\n  return key === 'a';\n});\n//=> {a: 'a'}\n```\n\n**filter on values**\n\n```js\nvar fn = function() {};\nvar obj = {a: 'a', b: 'b', c: fn};\n\nvar res = omit(obj, ['a'], function (val, key) {\n  return typeof val !== 'function';\n});\n//=> {b: 'b'}\n```\n\n### Other awesome javascript/node.js utils\n\n* [object.filter](https://github.com/jonschlinkert/object.filter): Create a new object filtered to have only properties for which the callback returns true.\n* [object.pick](https://github.com/jonschlinkert/object.pick): Returns a filtered copy of an object with only the specified keys, like `pick` from… [more](https://github.com/jonschlinkert/object.pick)\n* [object.pluck](https://github.com/jonschlinkert/object.pluck): Like pluck from underscore / lo-dash, but returns an object composed of specified properties, with… [more](https://github.com/jonschlinkert/object.pluck)\n* [object.reduce](https://github.com/jonschlinkert/object.reduce): Reduces an object to a value that is the accumulated result of running each property… [more](https://github.com/jonschlinkert/object.reduce)\n* [object.defaults](https://github.com/jonschlinkert/object.defaults): Like `extend` but only copies missing properties/values to the target object.\n\n## Runing tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/object.omit/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2014-2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on July 22, 2015._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/object.omit.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "related": {
      "list": [
        "object.filter",
        "object.pick",
        "object.pluck",
        "object.reduce",
        "object.defaults"
      ]
    }
  },
  "version": "2.0.0"
}
