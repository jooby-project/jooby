{
  "_args": [
    [
      {
        "raw": "which-module@https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
        "scope": null,
        "escapedName": "which-module",
        "name": "which-module",
        "rawSpec": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
        "spec": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
        "type": "remote"
      },
      "/Users/edgar/node_modules/dr-svg-sprites"
    ]
  ],
  "_from": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
  "_id": "which-module@1.0.0",
  "_inCache": true,
  "_location": "/dr-svg-sprites/which-module",
  "_phantomChildren": {},
  "_requested": {
    "raw": "which-module@https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
    "scope": null,
    "escapedName": "which-module",
    "name": "which-module",
    "rawSpec": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
    "spec": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/dr-svg-sprites",
    "/dr-svg-sprites/yargs"
  ],
  "_resolved": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
  "_shasum": "bba63ca861948994ff307736089e3b96026c2a4f",
  "_shrinkwrap": null,
  "_spec": "which-module@https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
  "_where": "/Users/edgar/node_modules/dr-svg-sprites",
  "author": {
    "name": "nexdrew"
  },
  "bugs": {
    "url": "https://github.com/nexdrew/which-module/issues"
  },
  "dependencies": {},
  "description": "Find the module object for something that was require()d",
  "devDependencies": {
    "ava": "^0.15.2",
    "coveralls": "^2.11.9",
    "nyc": "^6.4.4",
    "standard": "^7.1.2",
    "standard-version": "^2.3.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/nexdrew/which-module#readme",
  "keywords": [
    "which",
    "module",
    "exports",
    "filename",
    "require",
    "reverse",
    "lookup"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "which-module",
  "optionalDependencies": {},
  "readme": "# which-module\n\n> Find the module object for something that was require()d\n\n[![Build Status](https://travis-ci.org/nexdrew/which-module.svg?branch=master)](https://travis-ci.org/nexdrew/which-module)\n[![Coverage Status](https://coveralls.io/repos/github/nexdrew/which-module/badge.svg?branch=master)](https://coveralls.io/github/nexdrew/which-module?branch=master)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\nFind the `module` object in `require.cache` for something that was `require()`d\nor `import`ed - essentially a reverse `require()` lookup.\n\nUseful for libs that want to e.g. lookup a filename for a module or submodule\nthat it did not `require()` itself.\n\n## Install and Usage\n\n```\nnpm install --save which-module\n```\n\n```js\nconst whichModule = require('which-module')\n\nconsole.log(whichModule(require('something')))\n// Module {\n//   id: '/path/to/project/node_modules/something/index.js',\n//   exports: [Function],\n//   parent: ...,\n//   filename: '/path/to/project/node_modules/something/index.js',\n//   loaded: true,\n//   children: [],\n//   paths: [ '/path/to/project/node_modules/something/node_modules',\n//            '/path/to/project/node_modules',\n//            '/path/to/node_modules',\n//            '/path/node_modules',\n//            '/node_modules' ] }\n```\n\n## API\n\n### `whichModule(exported)`\n\nReturn the [`module` object](https://nodejs.org/api/modules.html#modules_the_module_object),\nif any, that represents the given argument in the `require.cache`.\n\n`exported` can be anything that was previously `require()`d or `import`ed as a\nmodule, submodule, or dependency - which means `exported` is identical to the\n`module.exports` returned by this method.\n\nIf `exported` did not come from the `exports` of a `module` in `require.cache`,\nthen this method returns `null`.\n\n## License\n\nISC Â© Contributors\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nexdrew/which-module.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "standard",
    "release": "standard-version",
    "test": "nyc ava"
  },
  "version": "1.0.0"
}
