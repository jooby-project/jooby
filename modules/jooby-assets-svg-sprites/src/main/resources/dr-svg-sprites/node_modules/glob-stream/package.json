{
  "_args": [
    [
      {
        "raw": "glob-stream@https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
        "scope": null,
        "escapedName": "glob-stream",
        "name": "glob-stream",
        "rawSpec": "https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
        "spec": "https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
        "type": "remote"
      },
      "/Users/edgar/node_modules/dr-svg-sprites"
    ]
  ],
  "_from": "glob-stream@>=5.3.2 <6.0.0",
  "_id": "glob-stream@5.3.5",
  "_inCache": true,
  "_location": "/dr-svg-sprites/glob-stream",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inflight": "1.0.6",
    "inherits": "2.0.3",
    "minimatch": "3.0.3",
    "once": "1.4.0",
    "path-is-absolute": "1.0.1",
    "string_decoder": "0.10.31",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "glob-stream@https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
    "scope": null,
    "escapedName": "glob-stream",
    "name": "glob-stream",
    "rawSpec": "https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
    "spec": "https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/dr-svg-sprites",
    "/dr-svg-sprites/vinyl-fs"
  ],
  "_resolved": "https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
  "_shasum": "a55665a9a8ccdc41915a87c701e32d4e016fad22",
  "_shrinkwrap": null,
  "_spec": "glob-stream@https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz",
  "_where": "/Users/edgar/node_modules/dr-svg-sprites",
  "author": {
    "name": "Gulp Team",
    "email": "team@gulpjs.com",
    "url": "http://gulpjs.com/"
  },
  "bugs": {
    "url": "https://github.com/gulpjs/glob-stream/issues"
  },
  "contributors": [],
  "dependencies": {
    "extend": "^3.0.0",
    "glob": "^5.0.3",
    "glob-parent": "^3.0.0",
    "micromatch": "^2.3.7",
    "ordered-read-streams": "^0.3.0",
    "through2": "^0.6.0",
    "to-absolute-glob": "^0.1.1",
    "unique-stream": "^2.0.2"
  },
  "description": "A wrapper around node-glob to make it streamy",
  "devDependencies": {
    "coveralls": "^2.11.2",
    "eslint": "^1.7.3",
    "eslint-config-gulp": "^2.0.0",
    "istanbul": "^0.3.0",
    "istanbul-coveralls": "^1.0.1",
    "jscs": "^2.3.5",
    "jscs-preset-gulp": "^1.0.0",
    "mocha": "^2.0.0",
    "mocha-lcov-reporter": "^0.0.2",
    "rimraf": "^2.2.5",
    "should": "^7.1.0",
    "stream-sink": "^1.2.0"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "files": [
    "index.js"
  ],
  "homepage": "http://gulpjs.com",
  "keywords": [
    "glob",
    "stream"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "glob-stream",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"http://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# glob-stream\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nA wrapper around [node-glob][node-glob-url] to make it streamy.\n\n## Usage\n\n```javascript\nvar gs = require('glob-stream');\n\nvar stream = gs.create('./files/**/*.coffee', { /* options */ });\n\nstream.on('data', function(file){\n  // file has path, base, and cwd attrs\n});\n```\n\nYou can pass any combination of globs. One caveat is that you can not only pass a glob negation, you must give it at least one positive glob so it knows where to start. All given must match for the file to be returned.\n\n## API\n\n### create(globs, options)\n\nReturns a stream for multiple globs or filters.\n\n### createStream(positiveGlob, negativeGlobs, options)\n\nReturns a stream for a single glob or filter.\n\n### Options\n\n- cwd\n  - Default is `process.cwd()`\n- base\n  - Default is everything before a glob starts (see [glob-parent][glob-parent-url])\n- cwdbase\n  - Default is `false`\n  - When true it is the same as saying opt.base = opt.cwd\n- allowEmpty\n  - Default is `false`\n  - If true, won't emit an error when a glob pointing at a single file fails to match\n- Any through2 related options are documented in [through2][through2-url]\n\nThis argument is passed directly to [node-glob][node-glob-url] so check there for more options\n\n### Glob\n\n```js\nvar stream = gs.create(['./**/*.js', '!./node_modules/**/*']);\n```\n\nGlobs are executed in order, so negations should follow positive globs. For example:\n\n```js\ngulp.src(['!b*.js', '*.js'])\n```\n\nwould not exclude any files, but this would\n\n```js\ngulp.src(['*.js', '!b*.js'])\n```\n\n## Related\n\n- [globby][globby-url] - Non-streaming `glob` wrapper with support for multiple patterns.\n\n## License\n\nMIT\n\n[globby-url]: https://github.com/sindresorhus/globby\n[through2-url]: https://github.com/rvagg/through2\n[node-glob-url]: https://github.com/isaacs/node-glob\n[glob-parent-url]: https://github.com/es128/glob-parent\n\n[downloads-image]: http://img.shields.io/npm/dm/glob-stream.svg\n[npm-url]: https://www.npmjs.com/package/glob-stream\n[npm-image]: https://badge.fury.io/js/glob-stream.svg\n\n[travis-url]: https://travis-ci.org/gulpjs/glob-stream\n[travis-image]: https://travis-ci.org/gulpjs/glob-stream.svg?branch=master\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/glob-stream\n[coveralls-image]: https://coveralls.io/repos/gulpjs/glob-stream/badge.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.png\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gulpjs/glob-stream.git"
  },
  "scripts": {
    "coveralls": "istanbul cover _mocha --report lcovonly && istanbul-coveralls",
    "lint": "eslint . && jscs . test/",
    "pretest": "npm run lint",
    "test": "mocha"
  },
  "version": "5.3.5"
}
