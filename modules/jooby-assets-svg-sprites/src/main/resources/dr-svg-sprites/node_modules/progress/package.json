{
  "_args": [
    [
      {
        "raw": "progress@https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
        "scope": null,
        "escapedName": "progress",
        "name": "progress",
        "rawSpec": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
        "spec": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
        "type": "remote"
      },
      "/Users/edgar/node_modules/dr-svg-sprites"
    ]
  ],
  "_from": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
  "_id": "progress@1.1.8",
  "_inCache": true,
  "_location": "/dr-svg-sprites/progress",
  "_phantomChildren": {},
  "_requested": {
    "raw": "progress@https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
    "scope": null,
    "escapedName": "progress",
    "name": "progress",
    "rawSpec": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
    "spec": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/dr-svg-sprites",
    "/dr-svg-sprites/phantomjs-prebuilt"
  ],
  "_resolved": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
  "_shasum": "e260c78f6161cdd9b0e56cc3e0a85de17c7a57be",
  "_shrinkwrap": null,
  "_spec": "progress@https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
  "_where": "/Users/edgar/node_modules/dr-svg-sprites",
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca"
  },
  "bugs": {
    "url": "https://github.com/visionmedia/node-progress/issues"
  },
  "contributors": [
    {
      "name": "Christoffer Hallas",
      "email": "christoffer.hallas@gmail.com"
    },
    {
      "name": "Jordan Scales",
      "email": "scalesjordan@gmail.com"
    }
  ],
  "dependencies": {},
  "description": "Flexible ascii progress bar",
  "devDependencies": {},
  "engines": {
    "node": ">=0.4.0"
  },
  "homepage": "https://github.com/visionmedia/node-progress#readme",
  "keywords": [
    "cli",
    "progress"
  ],
  "main": "index",
  "name": "progress",
  "optionalDependencies": {},
  "readme": "Flexible ascii progress bar.\n\n## Installation\n\n```bash\n$ npm install progress\n```\n\n## Usage\n\nFirst we create a `ProgressBar`, giving it a format string\nas well as the `total`, telling the progress bar when it will\nbe considered complete. After that all we need to do is `tick()` appropriately.\n\n```javascript\nvar ProgressBar = require('progress');\n\nvar bar = new ProgressBar(':bar', { total: 10 });\nvar timer = setInterval(function () {\n  bar.tick();\n  if (bar.complete) {\n    console.log('\\ncomplete\\n');\n    clearInterval(timer);\n  }\n}, 100);\n```\n\n### Options\n\nThese are keys in the options object you can pass to the progress bar along with\n`total` as seen in the example above.\n\n- `total` total number of ticks to complete\n- `width` the displayed width of the progress bar defaulting to total\n- `stream` the output stream defaulting to stderr\n- `complete` completion character defaulting to \"=\"\n- `incomplete` incomplete character defaulting to \"-\"\n- `clear` option to clear the bar on completion defaulting to false\n- `callback` optional function to call when the progress bar completes\n\n### Tokens\n\nThese are tokens you can use in the format of your progress bar.\n\n- `:bar` the progress bar itself\n- `:current` current tick number\n- `:total` total ticks\n- `:elapsed` time elapsed in seconds\n- `:percent` completion percentage\n- `:eta` estimated completion time in seconds\n\n## Examples\n\n### Download\n\nIn our download example each tick has a variable influence, so we pass the chunk\nlength which adjusts the progress bar appropriately relative to the total\nlength.\n\n```javascript\nvar ProgressBar = require('../');\nvar https = require('https');\n\nvar req = https.request({\n  host: 'download.github.com',\n  port: 443,\n  path: '/visionmedia-node-jscoverage-0d4608a.zip'\n});\n\nreq.on('response', function(res){\n  var len = parseInt(res.headers['content-length'], 10);\n\n  console.log();\n  var bar = new ProgressBar('  downloading [:bar] :percent :etas', {\n    complete: '=',\n    incomplete: ' ',\n    width: 20,\n    total: len\n  });\n\n  res.on('data', function (chunk) {\n    bar.tick(chunk.length);\n  });\n\n  res.on('end', function () {\n    console.log('\\n');\n  });\n});\n\nreq.end();\n```\n\nThe above example result in a progress bar like the one below.\n\n```\ndownloading [=====             ] 29% 3.7s\n```\n\nYou can see more examples in the `examples` folder.\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/visionmedia/node-progress.git"
  },
  "version": "1.1.8"
}
