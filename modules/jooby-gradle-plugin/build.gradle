// First, apply the publishing plugin
plugins {
  id "maven-publish"
  id "com.gradle.plugin-publish" version "2.0.0"
  id "java-gradle-plugin"
}

// If your plugin has any external java dependencies, Gradle will attempt to
// download them from JCenter for anyone using the plugins DSL
// so you should probably use JCenter for dependency resolution in your own
// project.
repositories {
  mavenLocal()
  mavenCentral()
}

def pom = new groovy.xml.XmlSlurper().parse(projectDir.toPath().getParent().resolve("pom.xml").toFile())
//noinspection GroovyAccessibility
def joobyVersion = project.properties['joobyVersion'] ?: pom.parent.version

// Unless overridden in the pluginBundle config DSL, the project version will
// be used as your plugin version when publishing
version = "${joobyVersion}"
group = "io.jooby"

dependencies {
  implementation "io.jooby:jooby-run:$version"
  implementation "io.jooby:jooby-openapi:$version"
  implementation "com.github.spotbugs:spotbugs-annotations:4.7.2"
}

// Use java-gradle-plugin to generate plugin descriptors and specify plugin ids
gradlePlugin {
  website = 'https://jooby.io'
  vcsUrl = 'https://github.com/jooby-project/jooby'
  description = 'Jooby is a modern, performant and easy to use web framework for Java and Kotlin ' +
      'built on top of your favorite web server. The joobyRun task allows to restart your ' +
      'application on code changes without exiting the JVM'
  plugins {
    joobyRun {
      id = 'io.jooby.run'
      implementationClass = 'io.jooby.gradle.JoobyPlugin'
      displayName = 'Jooby Run plugin'
      tags = ['jooby', 'run']
    }
    openAPI {
      id = 'io.jooby.openAPI'
      implementationClass = 'io.jooby.gradle.JoobyPlugin'
      displayName = 'Jooby OpenAPI plugin'
      tags = ['jooby', 'openAPI']
    }
  }
}
