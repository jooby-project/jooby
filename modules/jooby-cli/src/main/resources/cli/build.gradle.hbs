buildscript {
  ext {
    kotlinVersion = "1.3.41"
    joobyVersion = "{{joobyVersion}}"
  }

  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath "com.google.gradle:osdetector-gradle-plugin:1.4.0"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    {{#if kotlin}}classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"{{/if}}
    classpath "io.jooby:jooby-gradle-plugin:$joobyVersion"
    classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
  }
}

apply plugin: "io.spring.dependency-management"
apply plugin: "com.google.osdetector"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
{{#if kotlin}}apply plugin: "kotlin"{{/if}}
apply plugin: "jooby"

group "{{groupId}}"
version "{{version}}"
mainClassName = "{{package}}.App{{#if kotlin}}Kt{{/if}}"
sourceCompatibility = 1.8

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom "io.jooby:jooby-bom:$joobyVersion"
  }
}

dependencies {
{{#each dependencies}}
  compile "{{this}}"
{{/each}}

{{#each testDependencies}}
  testCompile "{{this}}"
{{/each}}
}

test {
  useJUnitPlatform()
}

{{#if kotlin}}
/** Kotlin debug information: */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions.javaParameters = true
}
{{else}}
/** Java debug information: */
tasks.withType(JavaCompile) {
  options.compilerArgs << '-parameters'
  options.debug = true
}
{{/if}}

shadowJar {
  mergeServiceFiles()
}
